
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  20480;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    log_format json escape=json '{"@timestamp":"$time_iso8601",'
            '"@version":"1",'
            '"server_addr":"$server_addr",'
            '"remote_addr":"$remote_addr",'
            '"client_real_ip":"$client_real_ip",'
            '"host":"$host",'
            '"uri":"$uri",'
            '"body_bytes_sent":$body_bytes_sent,'
            '"bytes_sent":$body_bytes_sent,'
            '"upstream_response_time":$upstream_response_time,'
            '"request":"$request",'
            '"request_length":$request_length,'
            '"request_time":$request_time,'
            '"status":"$status",'
            '"http_referer":"$http_referer",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"http_user_agent":"$http_user_agent"'
            '}';

    access_log  logs/access.log json;
    server_names_hash_bucket_size 128;
    large_client_header_buffers 4 32k;
    client_header_buffer_size 32k;
    client_max_body_size 100m;
    client_header_timeout 120s;
    client_body_timeout 120s;
	 
    proxy_buffer_size 64k;
    proxy_buffers   4 32k;
    proxy_busy_buffers_size 64k;
    proxy_connect_timeout 120s;
    proxy_send_timeout 120s;
    proxy_read_timeout 120s;
    
    server_tokens off;
    sendfile   on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 60;
     
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 3;
    gzip_http_version 1.0;
    gzip_types text/plain application/x-javascript application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    ###START访问白名单相关配置
    #geoip_country /usr/local/nginx/conf/GeoIPv6.dat;  #放刚才那个下载的文件地址
	##局域网地址
    #geo $localiplist {
    #    10.0.0.0/16 LH;
    #    192.168.0.0/16 LH;
    #    172.16.0.0/16 LH;
    #}
    ##允许局域网地址访问
    #map $geoip_country_code $allowed_country {
    #    default no;  #默认都拒绝
    #    CN yes;  #允许中国
    #    TW yes;  #允许台湾，台湾也是中国的
    #    HK yes;  #中国香港
    #    MO yes;  #中国澳门
    #}
    ##允许局域网地址访问
    #map $localiplist $allowed_country {
    #    default no;  #默认都拒绝
    #    LH yes;  #局域网
    #}
    ###END访问白名单相关配置
    
    ###START限流相关配置
    ##白名单ip段
    geo $whiteiplist {
        default 1;
        10.0.0.0/16 0;
        192.168.0.0/16 0;
        172.16.0.0/16 0;
    }
    ##这里取得原始用户的IP地址，没走CDN/SLB的，http_x_forwarded_for为空时使用$remote_addr的值
    map $http_x_forwarded_for $client_real_ip{
        "" $remote_addr;
        ~^(?P<firstAddr>[0-9a-fA-F:.]+),?.*$ $firstAddr;
    }
    #设置限流IP白名单，对白名单IP不设限
    map $whiteiplist $limit {
        1 $client_real_ip;
        0 "";
    }

    #以真实IP为单位，限制请求数，并返回429状态；
    limit_req_status 429;
    limit_req_zone $limit zone=ConnLimitZone:20m rate=1r/s;
    limit_req_log_level notice;
    #以真实IP为单位，限制该IP的并发连接数，并返回429状态；
    limit_conn_status 429;
    limit_conn_zone $limit zone=TotalConnLimitZone:20m ;
    limit_conn TotalConnLimitZone 100;
    limit_conn_log_level notice;
    #以访问域名为单位，限制总并发链接数；
    limit_conn_zone $server_name zone=SumConnLimitZone:20m;
    ###END限流相关配置
    include conf.d/*.conf;
}
